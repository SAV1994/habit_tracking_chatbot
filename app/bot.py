from telebot import types
from telebot.async_telebot import AsyncTeleBot

from app.services import get_actual_habits, get_completed_habits, get_markup, mark_habit
from app.settings import BOT_TOKEN

bot = AsyncTeleBot(BOT_TOKEN)


@bot.message_handler(commands=['start'])
async def start(message):
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
    """

    extra_data = message.json['extra_data']
    user = extra_data['user']

    webapp_cmd = types.BotCommand(command='webapp', description='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ü–µ–ª–∏')
    archive_cmd = types.BotCommand(command='archive', description='–°–ø–∏—Å–æ–∫ –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö —Ü–µ–ª–µ–π')
    mark_cmd = types.BotCommand(command='mark', description='–û—Ç–º–µ—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ')

    await bot.set_my_commands([mark_cmd, webapp_cmd, archive_cmd])
    await bot.set_chat_menu_button(message.chat.id, types.MenuButtonCommands('commands'))

    await bot.send_message(
        message.chat.id,
        f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user.name}. –Ø HabitBot. –î–∞–≤–∞–π—Ç–µ –º–µ–Ω—è—Ç—å –∂–∏–∑–Ω—å –∫ –ª—É—á—à–µ–º—É –≤–º–µ—Å—Ç–µ. üòâ',
    )


@bot.message_handler(commands=['webapp'])
async def webapp(message):
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ webapp
    """

    extra_data = message.json['extra_data']
    user = extra_data['user']

    await bot.send_message(
        message.chat.id,
        text='–í–∞–º –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ —Ü–µ–ª–∏ –∏–ª–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ? –¢–æ–≥–¥–∞ –∫–ª–∏–∫–∞–π—Ç–µ –ø–æ –∫–Ω–æ–ø–∫–µ "–ú–æ–∏ —Ü–µ–ª–∏".',
        reply_markup=get_markup(user=user),
    )


@bot.message_handler(commands=['archive'])
async def archive(message):
    """
    –°–ø–∏—Å–æ–∫ –≤—ã—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫
    """

    extra_data = message.json['extra_data']
    user = extra_data['user']
    session = extra_data['session']

    completed_habits = await get_completed_habits(session=session, user_id=user.id)
    if completed_habits:
        msg_items = [
            f'üèÜ {i}. | {habit.completed_date} | {habit.title}' for i, habit in enumerate(completed_habits, start=1)
        ]
        msg = '\n'.join(msg_items)
    else:
        msg = '‚ùå –í—ã –ø–æ–∫–∞ –µ—â—ë –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏ —Ä–∞–±–æ—Ç—É –Ω–∞–¥ –∫–∞–∫–∏–º–∏-–ª–∏–±–æ –ø—Ä–∏–≤—ã—á–∫–∞–º–∏'

    await bot.send_message(message.chat.id, text=msg)


@bot.message_handler(commands=['mark'])
async def mark(message):
    """
    –°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ü–µ–ª–µ–π –Ω–∞ –¥–µ–Ω—å
    """

    extra_data = message.json['extra_data']
    user = extra_data['user']
    session = extra_data['session']

    actual_habits = await get_actual_habits(session=session, user_id=user.id)

    if actual_habits:
        markup = types.InlineKeyboardMarkup()

        buttons = [
            types.InlineKeyboardButton(text=habit.title, callback_data=f'habit#{habit.id}') for habit in actual_habits
        ]
        markup.add(*buttons)

        await bot.send_message(
            message.chat.id,
            text='–ß—Ç–æ–±—ã –æ—Ç–º–µ—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É',
            reply_markup=markup,
        )
    else:
        await bot.send_message(message.chat.id, text='–£ –í–∞—Å –Ω–µ—Ç —Ü–µ–ª–µ–π –Ω–∞ —Å–µ–≥–æ–¥–Ω—è')


@bot.callback_query_handler(func=lambda callback: callback.data.startswith('habit#'))
async def mark_habit_handler(callback):
    """
    –û—Ç–º–µ—Ç–∫–∞ –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ü–µ–ª–∏
    """

    extra_data = callback.json['extra_data']
    user = extra_data['user']
    session = extra_data['session']

    _, habit_id = callback.data.split('#')
    habit = await mark_habit(session=session, habit_id=int(habit_id), user_id=user.id)
    if habit and habit.completed_date:
        await bot.send_message(
            callback.message.chat.id, f'–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üëè –í—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏ —Ä–∞–±–æ—Ç—É –Ω–∞–¥ –ø—Ä–∏–≤—ã—á–∫–æ–π "{habit.title}". üí™'
        )
    elif habit:
        await bot.send_message(
            callback.message.chat.id, f'–í—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ —Ü–µ–ª—å –ø–æ —Ä–∞–±–æ—Ç–µ –Ω–∞–¥ –ø—Ä–∏–≤—ã—á–∫–æ–π "{habit.title}". –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å! üëç'
        )
    else:
        await bot.send_message(callback.message.chat.id, '‚ùó –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ ')
